version: "3.8"

services:
  # ===================== MINIO =====================
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    env_file:
      - .env
    networks:
      - default
      - airflow

  # ===================== SPARK =====================
  spark:
    image: bitnami/spark:latest
    container_name: spark
    environment:
      - SPARK_MODE=client
    ports:
      - "4040:4040"
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    working_dir: /app
    command: tail -f /dev/null
    env_file:
      - .env
    networks:
      - default

  spark-notebook:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: spark-notebook
    ports:
      - "8888:8888"
    volumes:
      - ./data:/home/jovyan/data
      - ./src:/home/jovyan/src
    environment:
      - JUPYTER_ENABLE_LAB=yes
    env_file:
      - .env
    networks:
      - default

  # ===================== POSTGRES (Project) =====================
  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - default

  # ===================== REDIS (Airflow) =====================
  airflow-redis:
    image: redis:latest
    container_name: airflow-redis
    ports:
      - "6379:6379"
    networks:
      - airflow

  # ===================== POSTGRES (Airflow) =====================
  airflow-postgres:
    image: postgres:13
    container_name: airflow-postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data
    networks:
      - airflow

  # ===================== AIRFLOW SERVICES =====================
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-postgres
      - airflow-redis
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://airflow-redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - PYTHONPATH=/opt/airflow/src
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    command: webserver
    networks:
      - airflow

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-webserver
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://airflow-redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-postgres/airflow
      - PYTHONPATH=/opt/airflow/src
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    command: scheduler
    networks:
      - airflow

  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: airflow-worker
    restart: always
    depends_on:
      - airflow-webserver
    env_file:
      - .env
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://airflow-redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-postgres/airflow
      - PYTHONPATH=/opt/airflow/src
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
    command: celery worker
    networks:
      - airflow

volumes:
  pgdata:
  airflow_postgres_data:

networks:
  default:
    name: dev-net
  airflow:
    name: airflow-net